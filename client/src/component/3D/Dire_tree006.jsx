/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/tree/dire_tree006.glb --instanceall 
Files: public/tree/dire_tree006.glb [92.23KB] > C:\Users\17863\Desktop\dota\Dota2\client\dire_tree006-transformed.glb [68.72KB] (25%)
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, Merged } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

const context = React.createContext()

export function Instances({ children, ...props }) {
  const { nodes } = useGLTF('http://localhost:3001/assets/models/tree/dire_tree006-transformed.glb')
  const instances = React.useMemo(
    () => ({
      Diretreevmdlcdiretreemodel: nodes.dire_tree006vmdl_cdire_tree006_model,
    }),
    [nodes],
  )
  return (
    <Merged meshes={instances} {...props}>
      {(instances) => <context.Provider value={{instances, nodes}} children={children} />}
    </Merged>
  )
}

export function Model_Tree(props) {
  const {instances, nodes} = React.useContext(context)

  return (
    <group {...props} dispose={null} scale={0.025} rotation={[-Math.PI / 2, 0, -Math.PI / 2]}>
      <primitive object={nodes.joint1} />
      <instances.Diretreevmdlcdiretreemodel />
    </group>
  )
}